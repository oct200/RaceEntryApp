08 Apr 2025 14:17:31,630 ERROR org.server.StartServer 27 main - Cannot find chatserver.properties java.io.FileNotFoundException: db.config (The system cannot find the file specified)
08 Apr 2025 14:17:31,635 DEBUG org.server.StartServer 28 main - Looking for file in D:\GithubRepos\mpp-proiect-java-oct200\Server\.
08 Apr 2025 14:19:07,579 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 14:19:07,593 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 14:19:07,595 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 14:19:07,596 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 14:19:07,597 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 14:19:07,599 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 14:19:07,600 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 14:19:07,600 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 14:19:07,628 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 15:08:41,495 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 15:08:41,503 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 15:08:41,504 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 15:08:41,505 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 15:08:41,506 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 15:08:41,508 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 15:08:41,509 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 15:08:41,509 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 15:08:41,522 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 15:19:45,578 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 15:19:45,584 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 15:19:45,585 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 15:19:45,586 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 15:19:45,587 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 15:19:45,588 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 15:19:45,589 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 15:19:45,589 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 15:19:45,597 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 17:42:51,764 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 17:42:51,770 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 17:42:51,771 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 17:42:51,772 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 17:42:51,773 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 17:42:51,774 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 17:42:51,774 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 17:42:51,774 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 17:42:51,795 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:26:51,765 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:26:51,772 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:26:51,773 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:26:51,775 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:26:51,775 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:26:51,777 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:26:51,777 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:26:51,777 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:26:51,783 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:27:15,813 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:27:15,886 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:27:15,905 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 18:27:15,907 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 18:27:15,910 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:27:15,911 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:27:15,911 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:27:17,141 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:27:17,148 ERROR org.example.UserDBRepository 115 getUserByUsernameAndPassword - Error at getUserByUsernameAndPassword: [SQLITE_ERROR] SQL error or missing database (no such table: user)
08 Apr 2025 18:27:17,153 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:27:40,564 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:27:40,565 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:27:40,567 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:27:40,569 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:27:40,569 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:27:40,570 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:27:40,571 ERROR org.example.UserDBRepository 115 getUserByUsernameAndPassword - Error at getUserByUsernameAndPassword: [SQLITE_ERROR] SQL error or missing database (no such table: user)
08 Apr 2025 18:27:40,572 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:29:42,179 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:29:42,186 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:29:42,187 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:29:42,190 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:29:42,191 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:29:42,193 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:29:42,193 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:29:42,194 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:29:42,205 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:29:56,127 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:29:56,192 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:29:56,211 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 18:29:56,212 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 18:29:56,215 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:29:56,216 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:29:56,216 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:29:56,792 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32a0d4d4)
08 Apr 2025 18:29:56,800 ERROR org.example.UserDBRepository 115 getUserByUsernameAndPassword - Error at getUserByUsernameAndPassword: [SQLITE_ERROR] SQL error or missing database (no such table: User)
08 Apr 2025 18:29:56,806 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:33:44,417 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:33:44,427 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:33:44,429 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:33:44,431 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:33:44,432 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:33:44,434 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:33:44,434 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:33:44,435 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:33:44,442 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:33:55,560 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:33:55,624 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:33:55,638 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 18:33:55,639 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 18:33:55,640 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:33:55,641 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:33:55,641 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:33:56,207 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:33:56,213 ERROR org.example.UserDBRepository 115 getUserByUsernameAndPassword - Error at getUserByUsernameAndPassword: [SQLITE_ERROR] SQL error or missing database (no such table: user)
08 Apr 2025 18:33:56,217 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:35:16,234 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:35:16,241 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:35:16,243 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:35:16,244 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:35:16,245 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:35:16,247 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:35:16,247 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:35:16,247 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:35:16,259 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:35:31,227 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:35:31,294 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:35:31,313 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 18:35:31,314 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 18:35:31,318 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:35:31,318 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:35:31,319 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:35:31,970 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:35:31,979 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:36:06,497 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:36:06,498 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:36:06,499 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:36:06,500 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:36:06,500 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:36:06,501 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:36:06,502 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:36:06,503 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:36:10,937 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:36:10,939 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@4a3abc6c
08 Apr 2025 18:37:44,903 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:37:44,908 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:37:44,909 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:37:44,910 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:37:44,910 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:37:44,912 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:37:44,913 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:37:44,913 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:37:44,918 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:39:23,373 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:39:23,561 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:39:23,598 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 18:39:23,602 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 18:39:23,605 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:39:23,605 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:39:23,605 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:39:24,451 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4079e83b)
08 Apr 2025 18:39:24,458 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 18:39:32,508 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:39:32,510 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:39:32,512 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:39:32,514 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:39:32,514 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:39:32,515 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4079e83b)
08 Apr 2025 18:39:32,516 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:39:32,517 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:39:37,648 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:39:37,649 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:39:37,664 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:39:37,665 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:39:37,665 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:39:37,666 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4079e83b)
08 Apr 2025 18:39:37,666 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:39:37,667 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"utilizator deja logat"}
08 Apr 2025 18:41:56,199 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:41:56,211 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:41:56,212 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:41:56,213 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:41:56,214 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:41:56,216 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:41:56,216 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:41:56,216 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:41:56,225 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:42:03,997 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:42:04,094 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:42:04,106 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:42:04,107 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:42:04,109 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:42:04,110 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:42:04,111 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:42:04,560 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32a0d4d4)
08 Apr 2025 18:42:04,564 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:42:04,567 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:43:51,118 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:51,120 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@4faf844a
08 Apr 2025 18:43:52,131 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:52,132 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@70837e47
08 Apr 2025 18:43:53,135 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:53,136 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@1522ea7
08 Apr 2025 18:43:54,149 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:54,150 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@2c6f677f
08 Apr 2025 18:43:55,157 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:55,159 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@1fd12b6c
08 Apr 2025 18:43:56,166 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:56,167 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@74cb0f97
08 Apr 2025 18:43:57,170 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:57,171 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@64fc20bf
08 Apr 2025 18:43:58,177 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:58,178 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@337ff7c0
08 Apr 2025 18:43:59,184 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:43:59,185 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@25e33088
08 Apr 2025 18:44:00,195 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:00,197 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@9f83414
08 Apr 2025 18:44:00,963 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:44:00,965 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:44:00,976 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:44:00,978 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:44:00,979 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:44:00,980 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32a0d4d4)
08 Apr 2025 18:44:00,981 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:44:00,982 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"ERROR","errorMessage":"utilizator deja logat"}
08 Apr 2025 18:44:01,210 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:01,211 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@c04044c
08 Apr 2025 18:44:02,222 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:02,222 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@400923fb
08 Apr 2025 18:44:03,237 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:03,238 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@7c523c02
08 Apr 2025 18:44:04,250 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:04,251 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@3442ff08
08 Apr 2025 18:44:05,259 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:05,260 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@18c8bba8
08 Apr 2025 18:44:06,269 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:44:06,272 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@11d745b1
08 Apr 2025 18:44:08,707 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:44:08,712 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:44:08,713 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:44:08,713 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:44:08,714 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:44:08,716 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:44:08,716 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:44:08,716 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:44:08,723 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:44:20,037 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:44:20,094 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:44:20,111 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:44:20,113 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:44:20,115 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:44:20,116 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:44:20,116 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:44:20,501 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:44:20,504 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:44:20,508 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:45:38,615 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:45:38,628 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:45:38,630 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:45:38,632 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:45:38,634 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:45:38,637 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:45:38,639 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:45:38,639 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:45:38,654 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:45:51,808 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:45:51,859 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:45:51,881 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:45:51,882 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:45:51,886 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:45:51,887 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:45:51,888 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:45:52,327 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@743f70f8)
08 Apr 2025 18:45:52,332 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:45:52,335 DEBUG jsonprotocol.ChatClientJsonWorker 95 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:58:08,537 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 18:58:08,544 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 18:58:08,546 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 18:58:08,547 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 18:58:08,548 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 18:58:08,550 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 18:58:08,550 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 18:58:08,550 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 18:58:08,557 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:58:14,235 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 18:58:14,302 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 18:58:14,318 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 18:58:14,319 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 18:58:14,321 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:58:14,321 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:58:14,322 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:58:15,181 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@57cc26e2)
08 Apr 2025 18:58:15,185 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 18:58:15,190 DEBUG jsonprotocol.ChatClientJsonWorker 103 sendResponse - sending response {"type":"OK"}
08 Apr 2025 18:58:16,203 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 18:58:16,204 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 18:58:16,205 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 18:58:16,205 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 18:58:16,207 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@962f8ec)
08 Apr 2025 18:58:16,208 DEBUG jsonprotocol.ChatClientJsonWorker 103 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 18:58:33,097 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 18:58:33,098 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@351b0e74
08 Apr 2025 19:04:34,999 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:04:35,015 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:04:35,019 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:04:35,022 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:04:35,024 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:04:35,026 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:04:35,027 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:04:35,027 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:04:35,046 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:04:43,762 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:04:43,825 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:04:43,840 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:04:43,841 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:04:43,844 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:04:43,845 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:04:43,845 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:04:44,444 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32c1e243)
08 Apr 2025 19:04:44,448 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:04:44,450 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:04:45,456 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:04:45,457 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:04:45,458 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:04:45,459 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:04:45,461 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@55e2d8b0)
08 Apr 2025 19:04:45,463 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:05:27,583 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:05:27,599 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:05:27,602 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:05:27,604 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:05:27,607 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:05:27,610 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:05:27,611 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:05:27,611 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:05:27,621 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:05:42,583 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:05:42,648 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:05:42,667 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:05:42,668 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:05:42,671 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:05:42,672 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:05:42,673 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:05:43,095 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32c1e243)
08 Apr 2025 19:05:43,099 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:05:43,104 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:05:44,110 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:05:44,112 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:05:44,113 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:05:44,114 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:05:44,115 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@55e2d8b0)
08 Apr 2025 19:05:44,117 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:09:52,096 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:09:52,107 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:09:52,108 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:09:52,110 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:09:52,112 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:09:52,115 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:09:52,115 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:09:52,116 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:09:52,126 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:11:26,195 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:11:26,328 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:11:26,358 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:11:26,362 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:11:26,367 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:11:26,368 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:11:26,369 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:11:27,407 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4a131917)
08 Apr 2025 19:11:27,412 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:11:27,418 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:11:28,420 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:11:28,420 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:11:28,421 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:11:28,422 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:11:28,424 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@489a9cfc)
08 Apr 2025 19:11:28,426 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:12:40,471 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:12:40,477 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:12:40,478 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:12:40,479 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:12:40,480 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:12:40,482 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:12:40,482 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:12:40,483 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:12:40,492 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:12:55,221 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:12:55,271 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:12:55,287 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:12:55,288 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:12:55,293 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:12:55,293 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:12:55,294 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:12:55,698 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@32c1e243)
08 Apr 2025 19:12:55,701 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:12:55,705 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:12:56,709 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:12:56,710 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:12:56,711 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:12:56,711 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:12:56,714 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@55e2d8b0)
08 Apr 2025 19:12:56,716 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:16:03,356 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:16:03,365 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:16:03,365 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:16:03,366 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:16:03,367 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:16:03,370 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:16:03,370 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:16:03,371 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:16:03,379 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:16:13,049 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:16:13,086 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:16:13,101 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:16:13,102 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:16:13,104 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:16:13,104 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:16:13,104 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:16:13,700 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@c2c3c9b)
08 Apr 2025 19:16:13,703 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:16:13,705 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:16:14,708 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:16:14,708 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:16:14,708 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:16:14,709 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:16:14,710 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@5b37c24b)
08 Apr 2025 19:16:14,711 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:17:43,590 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:17:43,595 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:17:43,596 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:17:43,597 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:17:43,598 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:17:43,600 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:17:43,600 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:17:43,601 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:17:43,607 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:18:02,688 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:18:02,745 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:18:02,760 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='a', password='a'}
08 Apr 2025 19:18:02,761 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username a and password
08 Apr 2025 19:18:02,764 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:18:02,765 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:18:02,765 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:18:03,222 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@c2c3c9b)
08 Apr 2025 19:18:03,231 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"ERROR","errorMessage":"wrong username or password"}
08 Apr 2025 19:18:12,510 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:18:12,510 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:18:12,511 DEBUG jsonprotocol.ChatClientJsonWorker 79 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:18:12,512 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:18:12,512 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:18:12,512 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@c2c3c9b)
08 Apr 2025 19:18:12,513 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:18:12,513 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:18:13,527 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:18:13,529 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:18:13,530 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:18:13,531 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:18:13,533 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@2f0fc0ab)
08 Apr 2025 19:18:13,535 DEBUG jsonprotocol.ChatClientJsonWorker 111 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:19:18,799 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:19:18,808 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:19:18,810 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:19:18,811 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:19:18,813 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:19:18,815 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:19:18,815 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:19:18,816 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:19:18,823 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:19:24,739 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:19:24,780 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:19:24,791 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:19:24,793 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:19:24,793 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:19:24,796 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:19:24,797 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:19:24,797 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:19:25,196 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4a131917)
08 Apr 2025 19:19:25,199 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:19:25,203 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:19:26,207 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:19:26,208 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:19:26,208 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:19:26,208 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:19:26,208 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:19:26,209 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@489a9cfc)
08 Apr 2025 19:19:26,210 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:19:27,226 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:19:27,227 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:19:27,227 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:19:27,227 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:19:27,228 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:19:27,229 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@7ebadac4)
08 Apr 2025 19:19:27,231 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:20:24,153 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:20:24,162 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:20:24,164 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:20:24,165 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:20:24,167 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:20:24,169 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:20:24,170 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:20:24,170 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:20:24,185 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:20:42,036 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:20:42,110 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:20:42,127 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:20:42,129 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:20:42,130 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:20:42,137 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:20:42,137 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:20:42,138 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:20:42,687 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@4a131917)
08 Apr 2025 19:20:42,691 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:20:42,695 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:20:43,705 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:20:43,706 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:20:43,707 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:20:43,707 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:20:43,708 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:20:43,709 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@489a9cfc)
08 Apr 2025 19:20:43,711 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:20:44,712 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:20:44,714 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:20:44,714 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:20:44,715 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:20:44,715 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:20:44,716 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@7ebadac4)
08 Apr 2025 19:20:44,718 DEBUG jsonprotocol.ChatClientJsonWorker 112 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:28:06,786 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:28:06,794 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:28:06,796 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:28:06,798 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:28:06,799 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:28:06,800 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:28:06,801 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:28:06,801 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:28:06,807 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:28:10,230 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:28:10,259 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:28:10,269 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:28:10,270 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:28:10,270 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:28:10,273 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:28:10,273 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:28:10,274 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:28:10,758 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@33e4b6cd)
08 Apr 2025 19:28:10,760 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:28:10,762 DEBUG jsonprotocol.ChatClientJsonWorker 128 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:28:11,766 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:28:11,767 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:28:11,767 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:28:11,767 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:28:11,767 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:28:11,768 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@70c3a772)
08 Apr 2025 19:28:11,769 DEBUG jsonprotocol.ChatClientJsonWorker 128 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:28:12,778 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:28:12,778 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:28:12,778 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:28:12,779 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:28:12,779 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:28:12,780 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@5d96f9f8)
08 Apr 2025 19:28:12,781 DEBUG jsonprotocol.ChatClientJsonWorker 128 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:28:13,790 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:28:13,790 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:28:13,790 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:28:13,791 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@70c3a772)
08 Apr 2025 19:28:13,791 DEBUG jsonprotocol.ChatClientJsonWorker 128 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:28:14,801 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:28:14,801 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:28:14,801 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:28:14,801 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@5d96f9f8)
08 Apr 2025 19:28:14,803 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:28:14,803 DEBUG jsonprotocol.ChatClientJsonWorker 128 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:28:31,204 ERROR jsonprotocol.ChatClientJsonWorker 57 run - java.net.SocketException: Connection reset
08 Apr 2025 19:28:31,205 ERROR jsonprotocol.ChatClientJsonWorker 58 run - [Ljava.lang.StackTraceElement;@4d0996ac
08 Apr 2025 19:36:16,205 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:36:16,214 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:36:16,215 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:36:16,217 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:36:16,219 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:36:16,221 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:36:16,221 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:36:16,222 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:36:16,229 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:36:17,343 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:36:17,379 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:36:17,389 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:36:17,390 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:36:17,390 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:36:17,393 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:17,393 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:36:17,393 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:36:17,966 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@342eb83f)
08 Apr 2025 19:36:17,968 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:36:17,971 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:36:18,986 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:36:18,986 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:36:18,986 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:18,986 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:36:18,987 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:36:18,987 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:18,988 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:36:20,000 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:36:20,001 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:36:20,001 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:20,002 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:36:20,002 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:36:20,003 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:20,004 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:36:21,007 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:36:21,007 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:36:21,008 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:21,008 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:21,008 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:36:22,018 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:36:22,019 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:36:22,019 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:22,020 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:22,022 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:36:22,023 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:36:26,617 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:36:26,617 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Seat
08 Apr 2025 19:36:26,618 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:26,618 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:26,619 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1}]}
08 Apr 2025 19:36:28,878 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:36:28,879 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Yamaha
08 Apr 2025 19:36:28,879 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:28,879 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:28,879 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3}]}
08 Apr 2025 19:36:30,808 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:36:30,808 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Skoda
08 Apr 2025 19:36:30,808 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:30,808 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:30,809 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:36:32,886 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:36:32,886 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 125
08 Apr 2025 19:36:32,887 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:32,887 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:32,888 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:36:32,888 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1}]}
08 Apr 2025 19:36:35,311 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:36:35,311 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 250
08 Apr 2025 19:36:35,311 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:35,311 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:35,312 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:36:35,312 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:36:37,331 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:36:37,332 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:36:37,332 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:37,332 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:37,332 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:36:37,332 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:36:49,380 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:36:49,380 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:36:49,380 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:49,380 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:36:49,381 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:36:54,263 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:36:54,264 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 125
08 Apr 2025 19:36:54,264 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:54,264 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:54,264 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:36:54,265 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1}]}
08 Apr 2025 19:36:55,280 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:36:55,281 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:36:55,281 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:36:55,281 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:36:55,282 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:36:55,283 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:37:07,192 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:37:07,194 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 125
08 Apr 2025 19:37:07,194 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:37:07,194 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:37:07,194 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:37:07,194 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1}]}
08 Apr 2025 19:38:53,081 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:38:53,092 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:38:53,093 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:38:53,094 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:38:53,095 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:38:53,098 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:38:53,098 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:38:53,099 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:38:53,104 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:40:15,907 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:40:15,917 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:40:15,918 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:40:15,920 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:40:15,921 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:40:15,924 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:40:15,924 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:40:15,925 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:40:15,932 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:40:21,902 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:40:21,938 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:40:21,951 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:40:21,952 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:40:21,953 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:40:21,954 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:40:21,954 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:40:21,954 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:40:22,452 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@342eb83f)
08 Apr 2025 19:40:22,454 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:40:22,457 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:40:23,472 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:40:23,473 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:40:23,474 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:40:23,474 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:40:23,474 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:40:23,475 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:40:23,476 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:40:24,480 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:40:24,481 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:40:24,481 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:40:24,481 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:40:24,482 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:40:24,483 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:40:24,483 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:40:25,486 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:40:25,487 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:40:25,487 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:40:25,487 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:40:25,488 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:40:26,499 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:40:26,500 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:40:26,500 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:40:26,500 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:40:26,501 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:40:26,501 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:41:16,196 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:41:16,202 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:41:16,202 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:41:16,204 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:41:16,205 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:41:16,207 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:41:16,207 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:41:16,207 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:41:16,214 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:41:19,547 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:41:19,575 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:41:19,582 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:41:19,583 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:41:19,584 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:41:19,585 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:19,585 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:41:19,585 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:41:19,833 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@342eb83f)
08 Apr 2025 19:41:19,836 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:41:19,839 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:41:20,843 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:41:20,843 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:41:20,844 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:20,844 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:41:20,844 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:41:20,846 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:20,847 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:41:21,858 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:41:21,859 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:41:21,859 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:21,859 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:41:21,859 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:41:21,860 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:41:21,861 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:41:22,869 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:41:22,870 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:41:22,870 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:22,871 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:22,872 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:41:23,883 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:41:23,885 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:41:23,885 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:23,886 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:41:23,887 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:41:23,888 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:41:26,500 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:41:26,500 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Seat
08 Apr 2025 19:41:26,501 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:26,501 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:26,501 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1}]}
08 Apr 2025 19:41:27,652 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:41:27,652 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Yamaha
08 Apr 2025 19:41:27,652 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:27,652 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:27,653 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3}]}
08 Apr 2025 19:41:28,721 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:41:28,722 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Skoda
08 Apr 2025 19:41:28,722 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:28,722 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:28,723 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:41:31,407 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:41:31,408 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Seat
08 Apr 2025 19:41:31,408 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:31,408 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:31,409 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1}]}
08 Apr 2025 19:41:33,080 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:41:33,080 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Yamaha
08 Apr 2025 19:41:33,080 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:33,080 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:41:33,081 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3}]}
08 Apr 2025 19:41:36,002 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:41:36,002 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 125
08 Apr 2025 19:41:36,002 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:36,002 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:41:36,003 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:41:36,003 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1}]}
08 Apr 2025 19:41:37,118 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:41:37,118 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:41:37,118 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:41:37,118 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:41:37,118 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:41:37,119 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:44:02,927 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:44:02,932 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:44:02,933 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:44:02,934 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:44:02,934 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:44:02,937 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:44:02,938 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:44:02,938 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:44:02,944 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:44:28,907 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:44:28,948 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:44:28,957 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:44:28,960 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:44:28,960 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:44:28,961 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:44:28,962 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:44:28,962 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:44:29,279 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@342eb83f)
08 Apr 2025 19:44:29,281 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:44:29,283 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:44:30,299 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:44:30,301 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:44:30,302 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:44:30,302 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:44:30,303 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:44:30,304 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:44:30,305 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:44:31,316 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:44:31,317 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:44:31,318 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:44:31,318 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:44:31,318 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:44:31,319 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:44:31,320 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:44:32,324 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:44:32,324 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:44:32,325 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:44:32,325 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:44:32,327 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:44:33,333 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:44:33,334 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:44:33,334 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:44:33,334 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:44:33,336 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:44:33,337 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:45:30,615 INFO  org.server.StartServer 24 main - Server properties set. {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite} 
08 Apr 2025 19:45:30,621 INFO  org.example.CursaDBRepository 19 <init> - CursaDBRepository initialized
08 Apr 2025 19:45:30,622 INFO  org.example.ParticipantDBRepository 19 <init> - ParticipantDBRepository initialized
08 Apr 2025 19:45:30,623 INFO  org.example.InscriereDBRepository 29 <init> - InscriereDBRepository initialized
08 Apr 2025 19:45:30,625 INFO  org.example.UserDBRepository 18 <init> - UserDBRepository initialized with properties: {chat.server.port=55556, url=jdbc:sqlite:Moto.sqlite}
08 Apr 2025 19:45:30,627 DEBUG org.server.StartServer 39 main - Starting server on port: 55556
08 Apr 2025 19:45:30,627 DEBUG org.example.utils.AbsConcurrentServer 12 <init> - Concurrent AbstractServer
08 Apr 2025 19:45:30,627 INFO  jsonprotocol.ChatJsonConcurrentServer 16 <init> - Chat-ChatJsonConcurrentServer
08 Apr 2025 19:45:30,633 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:45:34,097 INFO  org.example.utils.AbstractServer 24 start - Client connected ...
08 Apr 2025 19:45:34,146 INFO  org.example.utils.AbstractServer 22 start - Waiting for clients ...
08 Apr 2025 19:45:34,160 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request LOGIN
08 Apr 2025 19:45:34,161 DEBUG jsonprotocol.ChatClientJsonWorker 80 handleRequest - Login request ...{}User{username='octa', password='pass'}
08 Apr 2025 19:45:34,161 INFO  org.example.UserDBRepository 101 getUserByUsernameAndPassword - Retrieving user with username octa and password
08 Apr 2025 19:45:34,166 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:34,166 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:45:34,166 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:45:34,502 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@342eb83f)
08 Apr 2025 19:45:34,505 INFO  org.example.UserDBRepository 111 getUserByUsernameAndPassword - User found: octa
08 Apr 2025 19:45:34,509 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK"}
08 Apr 2025 19:45:35,511 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_TEAMS
08 Apr 2025 19:45:35,512 INFO  org.example.ParticipantDBRepository 146 getEchipe - Fetching all team names
08 Apr 2025 19:45:35,513 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:35,513 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:45:35,514 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:45:35,515 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:45:35,516 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","echipe":["Seat","Yamaha","Skoda"]}
08 Apr 2025 19:45:36,526 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CAPACITATI
08 Apr 2025 19:45:36,527 INFO  org.example.CursaDBRepository 24 getCapacitati - Fetching all motor capacities
08 Apr 2025 19:45:36,528 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:36,529 TRACE org.example.JdbcUtils 21 getNewConnection - Enter
08 Apr 2025 19:45:36,529 INFO  org.example.JdbcUtils 23 getNewConnection - Connecting to jdbc:sqlite:Moto.sqlite
08 Apr 2025 19:45:36,531 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:45:36,533 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","capacitatiMotor":[125,250]}
08 Apr 2025 19:45:37,537 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_PARTICIPANTI
08 Apr 2025 19:45:37,538 INFO  org.example.ParticipantDBRepository 123 getAll - Fetching all Participants
08 Apr 2025 19:45:37,539 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:37,540 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:45:37,542 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1},{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3},{"nume":"Octa","capMotor":250,"echipa":"Skoda","cnp":"82901832302","id":4}]}
08 Apr 2025 19:45:38,550 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_ALL_CURSE
08 Apr 2025 19:45:38,551 INFO  org.example.CursaDBRepository 110 getAll - Fetching all Curse
08 Apr 2025 19:45:38,552 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:38,553 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:45:38,555 INFO  org.example.CursaDBRepository 123 getAll - Returning 2 curse
08 Apr 2025 19:45:38,556 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1},{"numarParticipanti":9,"capMotor":250,"id":2}]}
08 Apr 2025 19:45:42,452 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:45:42,453 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Seat
08 Apr 2025 19:45:42,453 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:42,455 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:45:42,455 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"Ionut","capMotor":125,"echipa":"Seat","cnp":"509103913003","id":1}]}
08 Apr 2025 19:45:43,961 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_CURSE_BY_CAP
08 Apr 2025 19:45:43,961 INFO  org.example.CursaDBRepository 129 getCurseByCap - Fetching all Curse with motor capacity 125
08 Apr 2025 19:45:43,962 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:43,962 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@6cca2e7b)
08 Apr 2025 19:45:43,963 INFO  org.example.CursaDBRepository 143 getCurseByCap - Returning 1 curse
08 Apr 2025 19:45:43,964 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","curse":[{"numarParticipanti":8,"capMotor":125,"id":1}]}
08 Apr 2025 19:45:45,430 INFO  jsonprotocol.ChatClientJsonWorker 78 handleRequest - Start handle request GET_PARTICIPANTI_BY_ECHIPE
08 Apr 2025 19:45:45,430 INFO  org.example.ParticipantDBRepository 98 getAllByTeam - Getting all Participants by team Yamaha
08 Apr 2025 19:45:45,430 TRACE org.example.JdbcUtils 35 getConnection - Enter
08 Apr 2025 19:45:45,431 TRACE org.example.JdbcUtils 43 getConnection - Exit with(org.sqlite.jdbc4.JDBC4Connection@420b4e53)
08 Apr 2025 19:45:45,431 DEBUG jsonprotocol.ChatClientJsonWorker 144 sendResponse - sending response {"type":"OK","participanti":[{"nume":"adrian","capMotor":125,"echipa":"Yamaha","cnp":"8028283819","id":2},{"nume":"Vali","capMotor":125,"echipa":"Yamaha","cnp":"5020810400055","id":3}]}
